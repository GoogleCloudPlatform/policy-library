# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: templates.gatekeeper.sh/v1alpha1
kind: ConstraintTemplate
metadata:
  name: gcp-sql-instance-type-v1
spec:
  crd:
    spec:
      names:
        kind: GCPSQLInstanceTypeConstraintV1
      validation:
        openAPIV3Schema:
          properties:
            mode:
              type: string
              enum: [allow, deny]
              description: "String identifying the operational mode,
              allow or deny. In the allow mode, only Cloud SQL instances
              with an instance type in the instance_types list will be allowed (the other ones will
              raise a violation). In the deny mode, the opposite is true. The default mode is deny."
              default: "deny"
            sql_instance_types:
              type: array
              items: string
              description: "List of Cloud SQL instance types to allow or deny. Can be any value from
              ['POSTGRES', 'MYSQL', 'SQLSERVER']."
  targets:
    validation.gcp.forsetisecurity.org:
      rego: | #INLINE("validator/sql_instance_type.rego")
            #
            # Copyright 2020 Google LLC
            #
            # Licensed under the Apache License, Version 2.0 (the "License");
            # you may not use this file except in compliance with the License.
            # You may obtain a copy of the License at
            #
            #      http://www.apache.org/licenses/LICENSE-2.0
            #
            # Unless required by applicable law or agreed to in writing, software
            # distributed under the License is distributed on an "AS IS" BASIS,
            # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            # See the License for the specific language governing permissions and
            # limitations under the License.
            #
            
            package templates.gcp.GCPSQLInstanceTypeConstraintV1
            
            import data.validator.gcp.lib as lib
            
            deny[{
            	"msg": message,
            	"details": metadata,
            }] {
            	asset := input.asset
            	constraint := input.constraint
            
            	asset.asset_type == "sqladmin.googleapis.com/Instance"
            	resource := asset.resource.data
            
            	resource.instanceType == "CLOUD_SQL_INSTANCE"
            	lib.get_constraint_params(constraint, params)
            
            	mode := lib.get_default(params, "mode", "deny")
            
            	not is_sql_instance_type_allowed(resource, mode, params)
            
            	message := sprintf("%v is not allowed to have an instance type of %s.", [asset.name, resource.databaseVersion])
            	metadata := {"resource": input.asset.name}
            }
            
            is_sql_instance_type_allowed(resource, mode, params) {
            	mode == "allow"
            	any_match(params.sql_instance_types, resource.databaseVersion)
            }
            
            is_sql_instance_type_allowed(resource, mode, params) {
            	mode == "deny"
            	not any_match(params.sql_instance_types, resource.databaseVersion)
            }
            
            any_match(instance_types, resource_type) {
            	instance_type := instance_types[_]
            	re_match(sprintf("^%s.*$", [instance_type]), resource_type)
            }
            #ENDINLINE
