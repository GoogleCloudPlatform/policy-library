# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: templates.gatekeeper.sh/v1alpha1
kind: ConstraintTemplate
metadata:
  name: gcp-vpc-sc-ensure-access-levels-v1
spec:
  crd:
    spec:
      names:
        kind: GCPVPCSCEnsureAccessLevelsConstraintV1
        plural: gcpvpcscensureaccesslevelsconstraintsv1
      validation:
        openAPIV3Schema:
          properties:
            required_access_levels:
              description: "Required access level names"
              type: array
              items: string
  targets:
    validation.gcp.forsetisecurity.org:
      rego: | #INLINE("validator/vpc_sc_ensure_access_levels.rego")
             #
             # Copyright 2019 Google LLC
             #
             # Licensed under the Apache License, Version 2.0 (the "License");
             # you may not use this file except in compliance with the License.
             # You may obtain a copy of the License at
             #
             #      http://www.apache.org/licenses/LICENSE-2.0
             #
             # Unless required by applicable law or agreed to in writing, software
             # distributed under the License is distributed on an "AS IS" BASIS,
             # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
             # See the License for the specific language governing permissions and
             # limitations under the License.
             #
             
             package templates.gcp.GCPVPCSCEnsureAccessLevelsConstraintV1
             
             import data.validator.gcp.lib as lib
             
             deny[{
             	"msg": message,
             	"details": metadata,
             }] {
             	constraint := input.constraint
             	asset := input.asset
             
             	asset.asset_type == "cloudresourcemanager.googleapis.com/Organization"
             	lib.has_field(asset, "service_perimeter")
             
             	lib.get_constraint_params(constraint, params)
             	required_access_levels_array := lib.get_default(params, "required_access_levels", [])
             	required_access_levels := {p | p = required_access_levels_array[_]}
             
             	perimeter_access_levels_raw := {split(r, "/") | r = asset.service_perimeter.status.access_levels[_]}
             	perimeter_access_levels := {r[3] | r = perimeter_access_levels_raw[_]}
             
             	count(perimeter_access_levels - required_access_levels) != count(perimeter_access_levels) - count(required_access_levels)
             
             	message := sprintf("Required access levels missing from service perimeter %v.", [asset.service_perimeter.name])
             
             	metadata := {"resource": asset.name, "service_perimeter_name": asset.service_perimeter.name}
             }
             #ENDINLINE
